swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "recTrip"
  termsOfService: "http://github.io/athagi/recTrip"
  contact:
    email: "at.hgt.dev@gmail.com"
basePath: "/api"
tags:
- name: "destination"
  description: ""
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /v1/jp/destination:
    get:
      tags:
      - "destination"
      summary: "prefecture of destination"
      description: ""
      operationId: "findDistinationOfJp"
      consumes:
      - "application/json"
      parameters:
      - name: "private_token"
        in: "path"
        description: "this key getting from Line auth"
        required: true
        type: "string"
      - name: "petId"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Destination"
        400:
          description: "Invalid status value"
      security:
      - line_auth: [read]
    post:
      tags:
      - "destination"
      summary: ""
      description: "update single data"
      operationId: "updateDestinationStatus" 
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "destination"
        in: "path"
        description: "locale of pet that needs to be updated"
        required: true
        type: "string"
      - name: "isGone"
        in: "path"
        description: "Updated locale"
        required: true
        type: "boolean"
      - name: "memo"
        in: "path"
        description: "Updated memo"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
      security:
      - api_key: []
    delete:
      tags: 
      - "destination"
      summary: ""
      description: ""
      operationId: "deleteDestination"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "petId"
        in: "path"
        description: "Pet id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
      security:
      - line_auth: [read, write]
  /user/login:
    get:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        400:
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
securityDefinitions:
  line_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write: "modify destination in your account"
      read: "read your destinaton list"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
  Destination:
    type: "object"
    properties:
      name:
        type: "string"
        example: "chiba"
      note: 
        type: "string"
      date: 
        type: "string"
        format: "date"